<!DOCTYPE HTML>
<html>

<head>
  <style>
    *{padding:0 ;margin:0;}
    #main {margin:25px 50px;}
    hr{margin: 50px 0;}
    .canvas-wrapper{background:#eee; position: relative; line-height: 577px; font-size:48px;}
    .canvas-wrapper canvas {position: absolute; z-index:5;}
    .canvas-wrapper p{position:absolute; color:#666; text-shadow: 0 0 1px #ddd; text-align:center;}
    .canvas-wrapper-l p{line-height:360px; width:640px;}
    .canvas-wrapper-l {width: 640px; height: 360px; }
    .canvas-wrapper-xl p{line-height: 577px; width:1024px;}
    .canvas-wrapper-xl {width: 1024px; height: 577px; }
  </style>
	<title>Canvas getImageData, putImageData Demos</title>
	<script>
//returns a function that calculates lanczos weight
function lanczosCreate(lobes){
  return function(x){
    if (x > lobes) 
      return 0;
    x *= Math.PI;
    if (Math.abs(x) < 1e-16) 
      return 1
    var xx = x / lobes;
    return Math.sin(x) * Math.sin(xx) / x / xx;
  }
}

//elem: canvas element, img: image element, sx: scaled width, lobes: kernel radius
function thumbnailer(elem, img, sx, lobes){ 
    this.canvas = elem;
    elem.width = img.naturalWidth;
    elem.height = img.naturalHeight;
    elem.style.display = "none";
    this.ctx = elem.getContext("2d");
    this.ctx.drawImage(img, 0, 0);
    this.img = img;
    this.src = this.ctx.getImageData(0, 0, img.width, img.height);
    this.dest = {
        width: sx,
        height: Math.round(img.height * sx / img.width),
    };
    this.dest.data = new Array(this.dest.width * this.dest.height * 3);
    this.lanczos = lanczosCreate(lobes);
    this.ratio = img.width / sx;
    this.rcp_ratio = 2 / this.ratio;
    this.range2 = Math.ceil(this.ratio * lobes / 2);
    this.cacheLanc = {};
    this.center = {};
    this.icenter = {};
    setTimeout(this.process1, 0, this, 0);
}

thumbnailer.prototype.process1 = function(self, u){
    self.center.x = (u + 0.5) * self.ratio;
    self.icenter.x = Math.floor(self.center.x);
    for (var v = 0; v < self.dest.height; v++) {
        self.center.y = (v + 0.5) * self.ratio;
        self.icenter.y = Math.floor(self.center.y);
        var a, r, g, b;
        a = r = g = b = 0;
        for (var i = self.icenter.x - self.range2; i <= self.icenter.x + self.range2; i++) {
            if (i < 0 || i >= self.src.width) 
                continue;
            var f_x = Math.floor(1000 * Math.abs(i - self.center.x));
            if (!self.cacheLanc[f_x]) 
                self.cacheLanc[f_x] = {};
            for (var j = self.icenter.y - self.range2; j <= self.icenter.y + self.range2; j++) {
                if (j < 0 || j >= self.src.height) 
                    continue;
                var f_y = Math.floor(1000 * Math.abs(j - self.center.y));
                if (self.cacheLanc[f_x][f_y] == undefined) 
                    self.cacheLanc[f_x][f_y] = self.lanczos(Math.sqrt(Math.pow(f_x * self.rcp_ratio, 2) + Math.pow(f_y * self.rcp_ratio, 2)) / 1000);
                weight = self.cacheLanc[f_x][f_y];
                if (weight > 0) {
                    var idx = (j * self.src.width + i) * 4;
                    a += weight;
                    r += weight * self.src.data[idx];
                    g += weight * self.src.data[idx + 1];
                    b += weight * self.src.data[idx + 2];
                }
            }
        }
        var idx = (v * self.dest.width + u) * 3;
        self.dest.data[idx] = r / a;
        self.dest.data[idx + 1] = g / a;
        self.dest.data[idx + 2] = b / a;
    }

    if (++u < self.dest.width) 
        setTimeout(self.process1, 0, self, u);
    else 
        setTimeout(self.process2, 0, self);
};
thumbnailer.prototype.process2 = function(self){
    self.canvas.width = self.dest.width;
    self.canvas.height = self.dest.height;
    self.ctx.drawImage(self.img, 0, 0);
    self.src = self.ctx.getImageData(0, 0, self.dest.width, self.dest.height);
    var idx, idx2;
    for (var i = 0; i < self.dest.width; i++) {
        for (var j = 0; j < self.dest.height; j++) {
            idx = (j * self.dest.width + i) * 3;
            idx2 = (j * self.dest.width + i) * 4;
            self.src.data[idx2] = self.dest.data[idx];
            self.src.data[idx2 + 1] = self.dest.data[idx + 1];
            self.src.data[idx2 + 2] = self.dest.data[idx + 2];
        }
    }
    self.ctx.putImageData(self.src, 0, 0);
    console.log('done');
    self.canvas.style.display = "block";
}

window.onload = function () {
  img = document.getElementById('img');

  canvasNaiveL = document.getElementById('canvas-naive-l');
  canvasNaiveXL = document.getElementById('canvas-naive-xl');

  canvasNaiveL.getContext('2d').drawImage(img, 0, 0, 640, 360);
  canvasNaiveXL.getContext('2d').drawImage(img, 0, 0, 1024, 577);

  canvasXL = document.getElementById('canvas-xl');
  new thumbnailer(canvasXL, img, 1024, 3);

  canvasL = document.getElementById('canvas-l');
  new thumbnailer(canvasL, img, 640, 3);


  /*
  elRange = document.getElementById('lanczos')
  elRangeText = document.getElementById('lanczos-text')
  elRange.onchange = function () {
    console.log(this.value)
    elRangeText.value = this.value;
  
  }

  elRedraw = document.getElementById('redraw');
  elRedraw.onclick = function () {
    new thumbnailer(canvasXL, img, 1024, elRange.value);
    new thumbnailer(canvasL, img, 640, elRange.value);
  }
  */
}

	</script>
</head>
<body>
  <div id="main">
    <a href="http://stackoverflow.com/questions/2303690/resizing-an-image-in-an-html5-canvas">http://stackoverflow.com/questions/2303690/resizing-an-image-in-an-html5-canvas</a>
    <p><a target="_blank" href="sample3.jpg">original image</a></p>
    <img id="img" src="sample3.jpg" style="position:absolute; top: -5000px; left: -5000px;">
    <!--
    <input type="range" id="lanczos" value="3" max="50">
    <input type="text" id="lanczos-text" value="3">
    <input type="button" id="redraw" value="redraw">
    -->

    <h3>thumbnail by dropbox, l</h3>
    <img height="360" width="640" src="sample3-l.jpg">
    <h3 style="margin-top:50px">thumbnail by canvas (naive)</h3>
    <div class="canvas-wrapper-l canvas-wrapper">
      <p>Drawing ...</p>
      <canvas height="360" width="640" id="canvas-naive-l"></canvas>
    </div>
    <h3 style="margin-top:50px">thumbnail by canvas (lanczos)</h3>
    <div class="canvas-wrapper-l canvas-wrapper">
      <p>Drawing ...</p>
      <canvas id="canvas-l"></canvas>
    </div>
    <hr>

    <h3>thumbnail by dropbox, xl</h3>
    <img height="577" width="1024" src="sample3-xl.jpg">
    <h3 style="margin-top:50px">thumbnail by canvas (naive)</h3>
    <div class="canvas-wrapper-xl canvas-wrapper">
      <p>Drawing ...</p>
      <canvas height="577" width="1024" id="canvas-naive-xl"></canvas>
    </div>
    <h3 style="margin-top:50px">thumbnail by canvas (lanczos)</h3>
    <div class="canvas-wrapper-xl canvas-wrapper">
      <p>Drawing ...</p>
      <canvas id="canvas-xl"></canvas>
    </div>
  </div>
</body>
</html>

